syntax = "proto3";
package energy;

// ====== Existing messages ======
message RawEnergyData {
  string timestamp = 1;
  string household_id = 2;
  string power_consumption = 3;
  string voltage = 4;
  string current = 5;
}

message ProcessedEnergyReport {
  string timestamp = 1;
  string household_id = 2;
  float  power = 3;
  float  efficiency = 4;
  string status = 5;
  bool   anomaly_detected = 6;
}

message ProcessedDataReport {
  repeated ProcessedEnergyReport processed = 1;
  int32 skipped_rows = 2;

  // raw_data removed earlier
  reserved 3;
  reserved "raw_data";
}

// ====== New: service request/response wrappers ======
message GenerateRequest {
  int32 rows = 1; 
}

message GenerateResponse {
  repeated RawEnergyData data = 1;
  bool success = 2;
  string message = 3;
  ErrorCode code = 4;
  string output_path = 5;
}

message AnalyzeRequest {
  repeated RawEnergyData data = 1;
}

message AnalyzeResponse {
  ProcessedDataReport report = 1;
  bool success = 2;
  string message = 3;
  ErrorCode code = 4;
}

message ReportRequest {
  ProcessedDataReport report = 1;
}

message ReportResponse {
  string html_path = 1; 
  bool success = 2;
  string message = 3;
  ErrorCode code = 4;
}

# ---- Error Codes ----
enum ErrorCode {
  UNKNOWN = 0;
  INVALID_ARGUMENT = 1;
  NOT_FOUND = 2;
  PRECONDITION_FAILED = 3;
  RESOURCE_EXHAUSTED = 4;
  INTERNAL = 5;
  UNAVAILABLE = 6;
  TIMEOUT = 7;
  PERMISSION_DENIED = 8;
} 

// ====== New: gRPC service definitions ======
service EnergyGenerator {
  rpc GenerateData (GenerateRequest) returns (GenerateResponse);
}

service EnergyAnalyzer {
  rpc AnalyzeData (AnalyzeRequest) returns (AnalyzeResponse);
}

service ReportGenerator {
  rpc GenerateReport (ReportRequest) returns (ReportResponse);
}
